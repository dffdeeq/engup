"""user_activity_and_more

Revision ID: a189737c493e
Revises: 1ba486c9ee16
Create Date: 2024-07-24 16:27:02.904787

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import table, column

# revision identifiers, used by Alembic.
revision: str = 'a189737c493e'
down_revision: Union[str, None] = '1ba486c9ee16'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('currency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('pts_channel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tg_user_activity',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('activity_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['tg_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tg_user_pts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('pts_channel_id', sa.Integer(), nullable=True),
    sa.Column('balance_movement', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pts_channel_id'], ['pts_channel.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['tg_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tg_user_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('flag_new_user', sa.Boolean(), nullable=True),
    sa.Column('flag_active_user', sa.Boolean(), nullable=True),
    sa.Column('flag_pay_user', sa.Boolean(), nullable=True),
    sa.Column('flag_churn_user', sa.Boolean(), nullable=True),
    sa.Column('flag_premium_user', sa.Boolean(), nullable=True),
    sa.Column('flag_return_user', sa.Boolean(), nullable=True),
    sa.Column('status_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['tg_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tg_user_wallet',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('channel', sa.String(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['tg_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('tg_user', sa.Column('adv_title_utm', sa.String(), nullable=True))
    op.add_column('tg_user', sa.Column('adv_channel', sa.String(), nullable=True))

    pts_channel_table = table(
        'pts_channel',
        column('id', sa.Integer),
        column('name', sa.String),
        column('description', sa.String)
    )
    currency_table = table(
        'currency',
        column('id', sa.Integer),
        column('code', sa.String),
        column('name', sa.String)
    )
    activity_table = table(
        'activity',
        column('id', sa.Integer),
        column('name', sa.String)
    )

    op.bulk_insert(pts_channel_table, [
        {'id': 1, 'name': 'start', 'description': 'Free points on start'},
        {'id': 2, 'name': 'buy', 'description': 'Purchased points'},
        {'id': 3, 'name': 'spent', 'description': 'Spent points'},
        {'id': 4, 'name': 'ref', 'description': 'Referral program points'},
    ])

    op.bulk_insert(currency_table, [
        {'id': 1, 'code': 'USD', 'name': 'US Dollar'},
        {'id': 2, 'code': 'EUR', 'name': 'Euro'},
        {'id': 3, 'code': 'RUB', 'name': 'Ruble'},
        {'id': 4, 'code': 'TGS', 'name': 'Telegram Stars'},

    ])

    op.bulk_insert(activity_table, [
        {'id': 100000, 'name': 'go to menu'},
        {'id': 110000, 'name': 'go to speaking'},
        {'id': 111000, 'name': 'start speaking'},
        {'id': 112000, 'name': 'end speaking'},
        {'id': 120000, 'name': 'go to writing'},
        {'id': 121000, 'name': 'start writing'},
        {'id': 122000, 'name': 'end writing'},
        {'id': 130000, 'name': 'go to balance'},
        {'id': 140000, 'name': 'go to pricing'},
        {'id': 141000, 'name': 'buy points'},
        {'id': 142000, 'name': 'spent point'},
        {'id': 150000, 'name': 'response generated'},
        {'id': 180000, 'name': 'use gpt request'},
        {'id': 190000, 'name': 'use voice request'},
    ])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tg_user', 'adv_channel')
    op.drop_column('tg_user', 'adv_title_utm')
    op.drop_table('tg_user_wallet')
    op.drop_table('tg_user_status')
    op.drop_table('tg_user_pts')
    op.drop_table('tg_user_activity')
    op.drop_table('pts_channel')
    op.drop_table('currency')
    op.drop_table('activity')
    # ### end Alembic commands ###
